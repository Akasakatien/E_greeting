@model DoAnHK3_4.Models.Account

@{
    ViewBag.Title = "MyProfile";
    Layout = "~/Areas/Admin/Views/Shared/_MyAdminLayoutPage.cshtml";
    var listQuestion = new List<SelectListItem>()
    {
      new SelectListItem{Text="Where did you speed your childhood summers?",Value="Where did you speed your childhood summers?"},
        new SelectListItem{Text="What was the last name of your favorite teacher?",Value="What was the last name of your favorite teacher?"},
         new SelectListItem{Text="What was your favorite food as a child?",Value="What was your favorite food as a child?"},
    };
    var list = new List<SelectListItem>(){
                      new SelectListItem{Text="An Giang",Value="An Giang"},
new SelectListItem{Text="Bà Rịa - Vũng Tàu",Value="Bà Rịa - Vũng Tàu"},
new SelectListItem{Text="Bắc Giang",Value="Bắc Giang"},
new SelectListItem{Text="Bắc Kạn",Value="Bắc Kạn"},
new SelectListItem{Text="Bạc Liêu",Value="Bạc Liêu"},
new SelectListItem{Text="Bắc Ninh",Value="Bắc Ninh"},
new SelectListItem{Text="Bến Tre",Value="Bến Tre"},
new SelectListItem{Text="Bình Định",Value="Bình Định"},
new SelectListItem{Text="Bình Dương",Value="Bình Dương"},
new SelectListItem{Text="Bình Phước",Value="Bình Phước"},
new SelectListItem{Text="Bình Thuận",Value="Bình Thuận"},
new SelectListItem{Text="Cà Mau",Value="Cà Mau"},
new SelectListItem{Text="Cao Bằng",Value="Cao Bằng"},
new SelectListItem{Text="Đắk Lắk",Value="Đắk Lắk"},
new SelectListItem{Text="Đắk Nông",Value="Đắk Nông"},
new SelectListItem{Text="Điện Biên",Value="Điện Biên"},
new SelectListItem{Text="Đồng Nai",Value="Đồng Nai"},
new SelectListItem{Text="Đồng Tháp",Value="Đồng Tháp"},
new SelectListItem{Text="Gia Lai",Value="Gia Lai"},
new SelectListItem{Text="Hà Giang",Value="Hà Giang"},
new SelectListItem{Text="Hà Tĩnh",Value="Hà Tĩnh"},
new SelectListItem{Text="Hải Dương",Value="Hải Dương"},
new SelectListItem{Text="Hậu Giang",Value="Hậu Giang"},
new SelectListItem{Text="Hòa Bình",Value="Hòa Bình"},
new SelectListItem{Text="Hưng Yên",Value="Hưng Yên"},
new SelectListItem{Text="Khánh Hòa",Value="Khánh Hòa"},
new SelectListItem{Text="Kiên Giang",Value="Kiên Giang"},
new SelectListItem{Text="Kon Tum",Value="Kon Tum"},
new SelectListItem{Text="Lai Châu",Value="Lai Châu"},
new SelectListItem{Text="Lâm Đồng",Value="Lâm Đồng"},
new SelectListItem{Text="Lạng Sơn",Value="Lạng Sơn"},
new SelectListItem{Text="Lào Cai",Value="Lào Cai"},
new SelectListItem{Text="Long An",Value="Long An"},
new SelectListItem{Text="Nam Định",Value="Nam Định"},
new SelectListItem{Text="Nghệ An",Value="Nghệ An"},
new SelectListItem{Text="Ninh Bình",Value="Ninh Bình"},
new SelectListItem{Text="Ninh Thuận",Value="Ninh Thuận"},
new SelectListItem{Text="Phú Thọ",Value="Phú Thọ"},
new SelectListItem{Text="Quảng Bình",Value="Quảng Bình"},
new SelectListItem{Text="Quảng Ngãi",Value="Quảng Ngãi"},
new SelectListItem{Text="Quảng Ninh",Value="Quảng Ninh"},
new SelectListItem{Text="Quảng Trị",Value="Quảng Trị"},
new SelectListItem{Text="Sóc Trăng",Value="Sóc Trăng"},
new SelectListItem{Text="Sơn La",Value="Sơn La"},
new SelectListItem{Text="Tây Ninh",Value="Tây Ninh"},
new SelectListItem{Text="Thái Bình",Value="Thái Bình"},
new SelectListItem{Text="Thái Nguyên",Value="Thái Nguyên"},
new SelectListItem{Text="Thanh Hóa",Value="Thanh Hóa"},
new SelectListItem{Text="Thừa Thiên Huế",Value="Thừa Thiên Huế"},
new SelectListItem{Text="Tiền Giang",Value="Tiền Giang"},
new SelectListItem{Text="Trà Vinh",Value="Trà Vinh"},
new SelectListItem{Text="Tuyên Quang",Value="Tuyên Quang"},
new SelectListItem{Text="Vĩnh Long",Value="Vĩnh Long"},
new SelectListItem{Text="Vĩnh Phúc",Value="Vĩnh Phúc"},
new SelectListItem{Text="Yên Bái",Value="Yên Bái"},
new SelectListItem{Text="Phú Yên",Value="Phú Yên"},
new SelectListItem{Text="Đà Nẵng",Value="Đà Nẵng"},
new SelectListItem{Text="Hải Phòng",Value="Hải Phòng"},
new SelectListItem{Text="Hà Nội",Value="Hà Nội"},
new SelectListItem{Text="TP HCM",Value="TP HCM"},
new SelectListItem{Text="Hà Nam",Value="Hà Nam"},
new SelectListItem{Text="Cần Thơ",Value="Cần Thơ"},
new SelectListItem{Text="Quảng Nam",Value="Quảng Nam"},
                 };
    var listGender = new List<SelectListItem>()
    {
        new SelectListItem{Text="Male",Value="Male"},
        new SelectListItem{Text="Female",Value="Female"},
         new SelectListItem{Text="Other",Value="Other"},
    };
}

<div class="container-fluid">
    <div class="row bg-title">
        <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
            <h4 class="page-title">My Profile</h4>
        </div>
 

        <!-- /.col-lg-12 -->
    </div>
</div>
<!-- row -->
<div class="row">
    <div class="col-lg-4 col-md-12">
        <div class="white-box">
            <div class="user-bg">
                <div class="overlay-box">
                    <div class="user-content">
                        <h1 class="text-white">@Html.DisplayFor(model => model.username)</h1>

                    </div>
                </div>
            </div>
            <div class="user-btm-box">
                <!-- .row -->
                <div class="row text-center m-t-10">
                    <div class="col-md-6 b-r">
                        <strong>@Html.DisplayNameFor(model => model.firstName)</strong>
                        <p>@Html.DisplayFor(model => model.firstName)</p>
                    </div>
                    <div class="col-md-6 b-r">
                        <strong>@Html.DisplayNameFor(model => model.lastName)</strong>
                        <p>@Html.DisplayFor(model => model.lastName)</p>
                    </div>
                </div>
                <!-- /.row -->
                <hr>
                <!-- .row -->
                <div class="row text-center m-t-10">
                    <div class="col-md-6 b-r">
                        <strong>@Html.DisplayNameFor(model => model.gender)</strong>
                        <p>@Html.DisplayFor(model => model.gender)</p>
                    </div>
                    <div class="col-md-6 b-r">
                        <strong>@Html.DisplayNameFor(model => model.mobile)</strong>
                        <p>@Html.DisplayFor(model => model.mobile)</p>
                    </div>
                </div>
                <!-- /.row -->
                <hr>
                <!-- .row -->
                <div class="row text-center m-t-10">
                    <div class="col-md-12">
                        <strong>@Html.DisplayNameFor(model => model.address)</strong>
                        <p>
                            @Html.DisplayFor(model => model.address)

                        </p>
                    </div>
                </div>
                <hr>
                <!-- /.row -->
            </div>
        </div>
    </div>
    <div class="col-lg-8 col-md-12">
        <div class="white-box">
            <!-- .tabs -->
            <ul class="nav customtab nav-tabs" role="tablist">
                <li role="presentation" class="nav-item"><a href="#home" class="nav-link active" aria-controls="home" role="tab" data-toggle="tab" aria-expanded="true"><span class="visible-xs"><i class="ti-home"></i></span><span class="hidden-xs"> Edit Information</span></a></li>
            </ul>
            <!-- /.tabs -->
            <div class="tab-content">
                <!-- .tabs 1 -->
                <div class="tab-pane active" id="home">
                    @using (Html.BeginForm("Edit", "Accounts", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form class="form-horizontal form-material">

                                    @Html.HiddenFor(model => model.id)

                            <div class="form-group">
                                <label for="exampleInputuname" class="col-md-12">@Html.LabelFor(model => model.username)</label>
                                <div class="col-sm-12">

                                    @Html.DisplayTextFor(model => model.username)
                                    @Html.HiddenFor(model => model.username)



                                </div>
                            </div>
                            <div class="form-group">
                                <label for="inputPassword3" class="col-md-12">@Html.LabelFor(model => model.password)*</label>
                                <div class="col-sm-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { type = "password", id = "exampleInputpwd2", placeholder = "Enter pwd", @class = "form-control" } })
                                    </div>
                                    <div class="help-block with-errors">@Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })</div>

                                </div>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputEmail1" class="col-md-12">@Html.LabelFor(model => model.question)*</label>
                                <div class="col-sm-12">
                                    <div class="input-group">
                                        @Html.DropDownListFor(model => model.question, listQuestion, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                </div>
                            </div>
                            <div class="form-group">
                                <label for="inputEmail3" class="col-md-12">@Html.LabelFor(model => model.answer)*</label>
                                <div class="col-sm-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.answer, new { type = "text", id = "exampleInputpwd1", placeholder = "Enter Answer The Question", htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    <div class="help-block with-errors">@Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })</div>

                                </div>
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1" class="col-md-12">@Html.LabelFor(model => model.roldId, "roldId")*</label>
                                <div class="col-sm-12">
                                    <div class="input-group">
                                        @Html.DropDownList("roldId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-body">

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.firstName)</label>
                                            @Html.EditorFor(model => model.firstName, new { type = "text", id = "firstName", placeholder = "First Name", htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.lastName)</label>
                                            @Html.EditorFor(model => model.lastName, new
                                           {
                                               type = "text",
                                               id = "lastName",
                                               placeholder = "Last Name",
                                               htmlAttributes = new { @class = "form-control" }
                                           })




                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.gender)</label>
                                            @Html.DropDownListFor(model => model.gender, listGender, htmlAttributes: new { @class = "form-control" })
                                            <span class="help-block"> Select your gender </span>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.country)</label>
                                            @Html.DropDownListFor(model => model.country, list, htmlAttributes: new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.mobile)</label>
                                            @Html.EditorFor(model => model.mobile, new
                                           {
                                               type = "text"@*, id = "firstName"*@,
                                               placeholder = "Phone Number",
                                               htmlAttributes = new { @class = "form-control" }
                                           })

                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.address)</label>
                                            @Html.EditorFor(model => model.address, new
                                           {
                                               type = "text"@*, id = "firstName"*@,
                                               placeholder = "Address",
                                               htmlAttributes = new { @class = "form-control" }
                                           })
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>

                                <!--/row-->
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-success" name="action:Edit" formaction="@Url.Action("MyProfile", "Accounts")">
                                    <i class="fa fa-check"></i>
                                    Update Profile
                                </button>
                                <a class="btn btn-default" href="@Url.Action("Index", "Accounts")">Cancel </a>
                            </div>
                        </form>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

