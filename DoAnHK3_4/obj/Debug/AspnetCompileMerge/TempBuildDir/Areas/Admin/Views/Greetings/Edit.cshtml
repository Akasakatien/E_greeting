@model DoAnHK3_4.Models.Greeting

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_MyAdminLayoutPage.cshtml";
}

<link rel="stylesheet" href="@Url.Content("~/Content/")admin/plugins/bower_components/dropify/dist/css/dropify.min.css">


<h2>Create</h2>

@using (Html.BeginForm("Edit", "Greetings", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Greeting</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*<label class="col-sm-10">@Html.LabelFor(model => model.photo)</label>*@
            @*<div class="col-sm-10">
                <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                    <div class="form-control" data-trigger="fileinput">
                        <i class="glyphicon glyphicon-file fileinput-exists"></i>
                        <span class="fileinput-filename"></span>
                    </div>
                    <span class="input-group-addon btn btn-default btn-file">
                        <span class="fileinput-new">Select file</span>
                        <span class="fileinput-exists">Change</span>*@
            @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
                <div class="col-md-10 ol-md-10 col-xs-12">
                    <div class="white-box">
                        <h3 class="box-title">File Upload</h3>
                      
                        @Html.EditorFor(model => model.photo, new { @ViewBag.CurrentPhoto, htmlAttributes = new { type = "file", name = "photo", @class = "dropify" } })
                        @*<input type="file" id="input-file-now" class="dropify" />*@
                    </div>
                </div>

            </div>
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.photo, new { htmlAttributes = new {type="file", name= "photo" } })
                    @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
                </div>*@
            @*<input type="file" name="photos" id="photos">*@
            @*</span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                    </div>
                </div>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.categoryDetailsID, "categoryDetailsID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("categoryDetailsID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.categoryDetailsID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-info waves-effect waves-light m-t-10">Edit</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="@Url.Content("~/Content/")admin/plugins/bower_components/dropify/dist/js/dropify.min.js"></script>
<script>
    $(document).ready(function() {
        // Basic
        $('.dropify').dropify();

        // Translated
        $('.dropify-fr').dropify({
            messages: {
                default: 'Glissez-déposez un fichier ici ou cliquez',
                replace: 'Glissez-déposez un fichier ou cliquez pour remplacer',
                remove: 'Supprimer',
                error: 'Désolé, le fichier trop volumineux'
            }
        });

        // Used events
        var drEvent = $('#input-file-events').dropify();

        drEvent.on('dropify.beforeClear', function(event, element) {
            return confirm("Do you really want to delete \"" + element.file.name + "\" ?");
        });

        drEvent.on('dropify.afterClear', function(event, element) {
            alert('File deleted');
        });

        drEvent.on('dropify.errors', function(event, element) {
            console.log('Has Errors');
        });

        var drDestroy = $('#input-file-to-destroy').dropify();
        drDestroy = drDestroy.data('dropify')
        $('#toggleDropify').on('click', function(e) {
            e.preventDefault();
            if (drDestroy.isDropified()) {
                drDestroy.destroy();
            } else {
                drDestroy.init();
            }
        })
    });
</script>